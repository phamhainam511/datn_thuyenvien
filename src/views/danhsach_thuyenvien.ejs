<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>PITSCO Crew Management System - Users</title>

    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <link href="css/style.css" rel="stylesheet">

</head>

<body id="page-top">

    <%- include('partials/header', { title: 'Danh sách thuyền viên' , baseUrl: '' }) %>

        <div id="wrapper">
            <%- include('partials/sidebar', { activeMenu: 'danh-sach-thuyen-vien' , baseUrl: '' }) %>

                <div id="content-wrapper" class="d-flex flex-column">
                    <div id="content">
                        <%- include('partials/topbar', { baseUrl: '' }) %>

                            <div class="container-fluid">
                                <div class="d-sm-flex align-items-center justify-content-between mb-4">
                                    <h1 class="h3 mb-0 text-gray-800">Danh sách thuyền viên</h1>
                                </div>

                                <div class="card shadow mb-4">
                                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                                        <div>
                                            <a href="/them-thuyen-vien"
                                                class="d-none d-sm-inline-block btn btn-secondary btn-sm me-2 shadow-sm mr-2">
                                                <i class="fas fa-user-plus fa-sm text-white-50"></i> Thêm thuyền viên
                                            </a>
                                            <button class="btn btn-danger btn-sm" onclick="xoaTatCaThuyenVien()">Xóa
                                                Thuyền
                                                viên</button>
                                        </div>
                                    </div>

                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <!-- Bộ lọc tìm kiếm -->
                                            <div class="row mb-3">
                                                <div class="col-md-2">
                                                    <label for="searchBox">Tìm kiếm theo tên:</label>
                                                    <input type="text" id="searchBox" class="form-control"
                                                        placeholder="Nhập từ khóa">
                                                </div>
                                                <!-- Trạng thái -->
                                                <div class="col-md-2">
                                                    <label for="statusFilter">Trạng thái:</label>
                                                    <select id="statusFilter" class="form-control">
                                                        <option value="">Tất cả</option>
                                                        <option value="Đang trên tàu">Đang trên tàu</option>
                                                        <option value="Đang chờ tàu">Đang chờ tàu</option>
                                                        <option value="Đang trên bờ">Đang trên bờ</option>
                                                    </select>
                                                </div>
                                                <!-- Thời gian -->
                                                <div class="col-md-2">
                                                    <label for="statusFilterTime">Thời gian chờ tàu:</label>
                                                    <select id="statusFilterTime" class="form-control">
                                                        <option value="">Tất cả</option>
                                                        <option value="Dưới 10 ngày">Dưới 10 ngày</option>
                                                        <option value="Còn 10 - 30 ngày">Còn 10 - 30 ngày</option>
                                                        <option value="Trên 30 ngày">Trên 30 ngày</option>
                                                    </select>
                                                </div>
                                                <!-- Chức danh -->
                                                <div class="col-md-2">
                                                    <label for="positionFilter">Lọc theo chức danh:</label>
                                                    <select id="positionFilter" class="form-control">
                                                        <option value="">Tất cả</option>
                                                        <% chucvus.forEach(function(chucvu) { %>
                                                            <option value="<%= chucvu.tenchucvu %>"><%= chucvu.tenchucvu %></option>
                                                        <% }) %>
                                                    </select>
                                                </div>
                                                <!-- Chứng chỉ -->
                                                <div class="col-md-4">
                                                    <label for="certificateFilter">Lọc theo chứng chỉ:</label>
                                                    <select id="certificateFilter" class="form-control" multiple>
                                                    </select>
                                                </div>
                                            </div>
                                            <form id="deleteForm" method="POST" action="/xoa-thuyen-vien">
                                            <table class="table table-bordered text-center" id="dataAllThuyenVienTable"
                                                width="100%" cellspacing="0">
                                                <thead class="table-secondary">
                                                    <tr>
                                                        <th><input type="checkbox" id="selectAll"
                                                                onclick="chonTatCa(this)"></th>
                                                        <th>Mã TV</th>
                                                        <th>Họ Tên</th>
                                                        <th>Chức danh</th>
                                                        <th>Số Điện Thoại</th>
                                                        <th>Email</th>
                                                        <th>Trạng thái</th>
                                                        <th>Thời gian lên tàu dự kiến</th>
                                                        <th>Thời gian còn lại</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% for(let i=0; i<allThuyenVien.length; i++){ %>
                                                        <tr>
                                                            <td><input type="checkbox" class="row-checkbox" name="id" value="<%= allThuyenVien[i].id_thuyenvien %>"></td>
                                                            <td>
                                                                <%= allThuyenVien[i].id_thuyenvien %>
                                                            </td>
                                                            <td onclick="window.location.href='/danh-sach-thuyen-vien/<%= allThuyenVien[i].id_thuyenvien %>'"
                                                                style="cursor: pointer;">
                                                                <%= allThuyenVien[i].hoten %>
                                                            </td>
                                                            <td class="position-cell">
                                                                <%= allThuyenVien[i].latestChucVu ? allThuyenVien[i].latestChucVu : 'Chưa có' %>
                                                            </td>
                                                            <td>
                                                                <%= allThuyenVien[i].sodienthoai %>
                                                            </td>
                                                            <td>
                                                                <%= allThuyenVien[i].email %>
                                                            </td>
                                                            <td><span class="badge badge-primary">
                                                                    <%= allThuyenVien[i].trangthai %>
                                                            </span></td>
                                                            <td>
                                                                <%= allThuyenVien[i].thoigian_lenTauDuKien 
                                                                        ? new Date(allThuyenVien[i].thoigian_lenTauDuKien).toLocaleDateString('vi-VN') 
                                                                        : '-' %>
                                                                </td>
                                                            <%
                                                                const id = allThuyenVien[i].id_thuyenvien;
                                                                let diffDays = null;
                                                                let diffHours = null;
                                                                let statusClass = '';
                                                                let statusContent = '-';

                                                                if (allThuyenVien[i].trangthai === 'Đang chờ tàu' && estimatedBoardingTimes && estimatedBoardingTimes[id]) {
                                                                    const now = new Date();
                                                                    const boardingDate = new Date(estimatedBoardingTimes[id]);
                                                                    let diffMs = boardingDate - now;

                                                                    if (diffMs > 0) {
                                                                        diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
                                                                        diffMs -= diffDays * (1000 * 60 * 60 * 24);
                                                                        diffHours = Math.floor(diffMs / (1000 * 60 * 60));

                                                                        if (diffDays >= 10 && diffDays <= 30) {
                                                                            statusClass = 'text-warning';
                                                                        } else if (diffDays < 10) {
                                                                            statusClass = 'text-danger';
                                                                        } else {
                                                                            statusClass = 'text-success';
                                                                        }

                                                                        statusContent = `<span class="${statusClass} font-weight-bold">Còn ${diffDays} ngày</span>`;
                                                                    } else {
                                                                        statusContent = '<span class="text-muted font-italic font-weight-bold">Đã quá hạn lên tàu dự kiến</span>';
                                                                    }
                                                                }
                                                            %>

                                                            <td data-ngaycho="<%= diffDays !== null ? diffDays : '' %>">
                                                                <%- statusContent %>
                                                            </td>
                                                        </tr>
                                                        <% } %>
                                                </tbody>
                                            </table>
                                            </form>
                                            </form>
                                        </div>
                                    </div>
                                </div>


                            </div>

                    </div>

                    <%- include('partials/footer') %>
                </div>
        </div>

        <a class="scroll-to-top rounded" href="#page-top">
            <i class="fas fa-angle-up"></i>
        </a>

        <%- include('partials/logout-modal') %>
            <%- include('partials/scripts') %>

                <script>
                    function themThuyenVien() {
                        window.location.href = '/crew-add';
                    }

                    function chonTatCa(source) {
                        var checkboxes = document.querySelectorAll('.row-checkbox');
                        for (var i = 0; i < checkboxes.length; i++) {
                            checkboxes[i].checked = source.checked;
                        }
                    }

                    function xoaTatCaThuyenVien() {
                        const checkboxes = document.querySelectorAll('.row-checkbox:checked');
                        if (checkboxes.length === 0) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Chưa chọn thuyền viên',
                                text: 'Vui lòng chọn ít nhất một thuyền viên để xóa.'
                            });
                            return;
                        }

                        Swal.fire({
                            title: 'Bạn có chắc chắn?',
                            text: `Bạn muốn xóa ${checkboxes.length} thuyền viên đã chọn?`,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Xóa',
                            cancelButtonText: 'Hủy'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                document.getElementById('deleteForm').submit();
                            }
                        });
                    }


                    $(document).ready(function () {
                        if (!$('link[href*="select2.min.css"]').length) {
                            $('head').append('<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />');
                        }

                        if (!$('script[src*="select2.min.js"]').length) {
                            $.getScript('https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js', function () {
                                initializeCertificateFilter();
                            });
                        } else {
                            initializeCertificateFilter();
                        }
                    });

                    function initializeCertificateFilter() {
                        console.log("Initializing certificate filter");
                        $.ajax({
                            url: '/api/chung-chi',
                            type: 'GET',
                            dataType: 'json',
                            success: function (certificates) {
                                console.log("Certificates loaded:", certificates);

                                var select = $('#certificateFilter');
                                select.empty(); 

                                certificates.forEach(function (cert) {
                                    select.append('<option value="' + cert.id_chungchi + '">' + cert.tenchungchi + '</option>');
                                });

                                select.select2({
                                    placeholder: 'Chọn các chứng chỉ...',
                                    width: '100%',
                                    closeOnSelect: false
                                });

                                select.on('change', function () {
                                    console.log("Certificate selection changed:", $(this).val());
                                    filterTableByCertificates();
                                });
                            },
                            error: function (error) {
                                console.error('Error loading certificates:', error);
                                alert('Không thể tải danh sách chứng chỉ: ' + error.statusText);
                            }
                        });
                    }

                    function filterTableByCertificates() {
                        var selectedCertificates = $('#certificateFilter').val();
                        console.log("Selected certificates for filtering:", selectedCertificates);

                        if (!selectedCertificates || selectedCertificates.length === 0) {
                            console.log("No certificates selected, showing all rows");

                            if ($.fn.dataTable.ext.search.length > 0) {
                                $.fn.dataTable.ext.search.pop();
                            }

                            $('#dataAllThuyenVienTable').DataTable().draw();
                            return;
                        }

                        $.ajax({
                            url: '/api/crew-with-certificates',
                            type: 'GET',
                            data: { certificates: selectedCertificates.join(',') },
                            dataType: 'json',
                            success: function (crewIds) {
                                console.log("Received crew IDs with certificates:", crewIds);

                                if ($.fn.dataTable.ext.search.length > 0) {
                                    $.fn.dataTable.ext.search.pop();
                                }

                                $.fn.dataTable.ext.search.push(
                                    function (settings, data, dataIndex) {
                                        var crewId = parseInt(data[1]);
                                        return crewIds.includes(crewId);
                                    }
                                );

                                $('#dataAllThuyenVienTable').DataTable().draw();
                            },
                            error: function (error) {
                                console.error('Error filtering by certificates:', error);
                                alert('Lỗi khi lọc theo chứng chỉ: ' + error.statusText);
                            }
                        });
                    }

                    $(document).ready(function () {
                        if ($.fn.DataTable.isDataTable('#dataAllThuyenVienTable')) {
                            $('#dataAllThuyenVienTable').DataTable().destroy();
                        }

                        var table = $('#dataAllThuyenVienTable').DataTable({
                            "paging": true,
                            "lengthChange": true,
                            "searching": true,
                            "ordering": true,
                            "info": true,
                            "autoWidth": false,
                            "responsive": true,
                            "dom": 'lrtip', 
                            "language": {
                                "search": "Tìm kiếm:",
                                "lengthMenu": "Hiển thị _MENU_ mục",
                                "info": "Hiển thị _START_ đến _END_ của _TOTAL_ mục",
                                "infoEmpty": "Hiển thị 0 đến 0 của 0 mục",
                                "paginate": {
                                    "first": "Đầu",
                                    "last": "Cuối",
                                    "next": "Sau",
                                    "previous": "Trước"
                                }
                            }
                        });

                        $('#searchBox').keyup(function () {
                            let selectedStatus = $(this).val().toLowerCase().trim();

                            $.fn.dataTable.ext.search.pop();

                            if (selectedStatus) {
                                $.fn.dataTable.ext.search.push(
                                    function (settings, data, dataIndex) {
                                        let rowStatus = data[2].toLowerCase(); 

                                        return rowStatus.includes(selectedStatus);
                                    }
                                );
                            }

                            table.draw();
                        });

                        $('#statusFilter').change(function () {
                            let selectedStatus = $(this).val().trim(); 

                            $.fn.dataTable.ext.search.pop();

                            if (selectedStatus) {
                                $.fn.dataTable.ext.search.push(
                                    function (settings, data, dataIndex) {
                                        let rowStatus = data[6].trim(); 
                                        console.log('So sánh:', rowStatus, 'vs', selectedStatus);
                                        return rowStatus === selectedStatus;
                                    }
                                );
                            }

                            table.draw();
                        });


                        $('#entries').on('change', function () {
                            table.page.len($(this).val()).draw();
                        });
                    });

                    document.getElementById('statusFilterTime').addEventListener('change', function () {
                        const selected = this.value;
                        const rows = document.querySelectorAll('table tbody tr');

                        rows.forEach(row => {
                            // Tìm td có attribute data-ngaycho trong row này
                            const td = row.querySelector('td[data-ngaycho]');
                            if (!td) {
                                // Nếu không có td này, tùy bạn ẩn hay hiện
                                row.style.display = '';
                                return;
                            }

                            const ngayChoAttr = td.getAttribute('data-ngaycho');
                            const ngayCho = parseInt(ngayChoAttr);

                            let show = true; // mặc định hiện

                            if (selected === 'Dưới 10 ngày') {
                                show = !isNaN(ngayCho) && ngayCho < 10;
                            } else if (selected === 'Còn 10 - 30 ngày') {
                                show = !isNaN(ngayCho) && ngayCho >= 10 && ngayCho <= 30;
                            } else if (selected === 'Trên 30 ngày') {
                                show = !isNaN(ngayCho) && ngayCho > 30;
                            } else if (selected === '') {
                                show = true;
                            } else {
                                show = false;
                            }

                            row.style.display = show ? '' : 'none';
                        });
                    });
                    document.getElementById('positionFilter').addEventListener('change', function () {
                        const selected = this.value.toLowerCase();
                        const rows = document.querySelectorAll('tbody tr');

                        rows.forEach(row => {
                            const positionTd = row.querySelector('.position-cell');
                            const value = positionTd?.textContent.trim().toLowerCase() || '';
                            if (!selected || value === selected) {
                                row.style.display = '';
                            } else {
                                row.style.display = 'none';
                            }
                        });
                    });

                    document.addEventListener('DOMContentLoaded', function () {
                        const urlParams = new URLSearchParams(window.location.search);
                        const success = urlParams.get('success');
                        const error = urlParams.get('error');

                        if (success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thêm thành công!',
                                text: 'Thuyền viên đã được thêm vào danh sách.',
                                timer: 2000,
                                showConfirmButton: false
                            });
                        }

                        if (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: decodeURIComponent(error),
                                confirmButtonText: 'OK'
                            });
                        }

                        if (success || error) {
                            window.history.replaceState({}, document.title, window.location.pathname);
                        }

                        const deleted = urlParams.get('deleted');

                        if (deleted && parseInt(deleted) > 0) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Xoá thành công!',
                                text: `Đã xóa ${deleted} thuyền viên.`,
                                timer: 2000,
                                showConfirmButton: false
                            });
                        }

                        if (deleted !== null) {
                            window.history.replaceState({}, document.title, window.location.pathname);
                        }
                    });
                </script>
</body>

</html>