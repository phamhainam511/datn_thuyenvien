<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>PITSCO Crew Management System - Users</title>

    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <link href="css/style.css" rel="stylesheet">

</head>

<body id="page-top">

    <%- include('partials/header', { title: 'Danh s√°ch thuy·ªÅn vi√™n', baseUrl: '' }) %>

    <div id="wrapper">
        <%- include('partials/sidebar', { activeMenu: 'danh-sach-thuyen-vien', baseUrl: '' }) %>

        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <%- include('partials/topbar', { baseUrl: '' }) %>

                <div class="container-fluid">
                    <!-- Page Heading -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">Danh s√°ch thuy·ªÅn vi√™n</h1>
                        <!-- <div>
                            <a href="/them-thuyen-vien" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm mr-2">
                                <i class="fas fa-user-plus fa-sm text-white-50"></i> Th√™m thuy·ªÅn vi√™n
                            </a>
                            <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                                <i class="fas fa-file-export fa-sm text-white-50"></i> Xu·∫•t danh s√°ch
                            </a>
                        </div> -->
                    </div>

                    <div class="card shadow mb-4">
                        <div class="card-header py-3 d-flex justify-content-between align-items-center">
                            <div>
                                <a href="/them-thuyen-vien" class="d-none d-sm-inline-block btn btn-success btn-sm me-2 shadow-sm mr-2">
                                    <i class="fas fa-user-plus fa-sm text-white-50"></i> Th√™m thuy·ªÅn vi√™n
                                </a>
                                <button class="btn btn-danger btn-sm" onclick="xoaTatCaThuyenVien()">üóë X√≥a Thuy·ªÅn
                                    vi√™n</button>
                            </div>
                        </div>

                        <div class="card-body">
                            <div class="table-responsive">
                                <!-- B·ªô l·ªçc t√¨m ki·∫øm -->
                                <div class="row mb-3">
                                    <div class="col-md-3">
                                        <label for="searchBox">T√¨m ki·∫øm theo t√™n:</label>
                                        <input type="text" id="searchBox" class="form-control"
                                            placeholder="Nh·∫≠p t·ª´ kh√≥a">
                                    </div>
                                    <!-- Tr·∫°ng th√°i -->
                                    <div class="col-md-3">
                                        <label for="statusFilter">Tr·∫°ng th√°i:</label>
                                        <select id="statusFilter" class="form-control">
                                            <option value="">T·∫•t c·∫£</option>
                                            <option value="ƒêang l√†m vi·ªác tr√™n t√†u">ƒêang tr√™n t√†u</option>
                                            <option value="ƒêang ch·ªù t√†u">ƒêang ch·ªù t√†u</option>
                                            <option value="ƒêang tr√™n b·ªù">ƒêang tr√™n b·ªù</option>
                                        </select>
                                    </div>
                                    <!-- Ch·ª©ng ch·ªâ -->
                                    <div class="col-md-6">
                                        <label for="certificateFilter">L·ªçc theo ch·ª©ng ch·ªâ:</label>
                                        <select id="certificateFilter" class="form-control" multiple>
                                            <!-- Certificate options will be loaded via JavaScript -->
                                        </select>
                                    </div>
                                </div>
                                <table class="table table-bordered text-center" id="dataAllThuyenVienTable" width="100%" cellspacing="0">
                                    <thead class="table-secondary">
                                        <tr>
                                            <th><input type="checkbox" id="selectAll" onclick="chonTatCa(this)"></th>
                                            <th>M√£ TV</th>
                                            <th>H·ªç T√™n</th>
                                            <th>S·ªë ƒêi·ªán Tho·∫°i</th>
                                            <th>Email</th>
                                            <th>Tr·∫°ng th√°i</th>
                                            <th>Th·ªùi gian l√™n t√†u d·ª± ki·∫øn</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for(let i = 0; i<allThuyenVien.length; i++){ %>
                                        <tr>
                                            <td><input type="checkbox" class="row-checkbox"></td>
                                            <td><%= allThuyenVien[i].id_thuyenvien %></td>
                                            <td onclick="window.location.href='/danh-sach-thuyen-vien/<%= allThuyenVien[i].id_thuyenvien %>'"
                                                style="cursor: pointer;"><%= allThuyenVien[i].hoten %></td>
                                            <td><%= allThuyenVien[i].sodienthoai %></td>
                                            <td><%= allThuyenVien[i].email %></td>
                                            <td><span class="badge badge-primary"><%= allThuyenVien[i].trangthai %></span></td>
                                            <td>
                                                <% if(allThuyenVien[i].trangthai === 'ƒêang ch·ªù t√†u' && estimatedBoardingTimes && estimatedBoardingTimes[allThuyenVien[i].id_thuyenvien]) { %>
                                                    <%= estimatedBoardingTimes[allThuyenVien[i].id_thuyenvien] %>
                                                <% } else { %>
                                                    -
                                                <% } %>
                                            </td>
                                        </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>


                </div>

            </div>

            <%- include('partials/footer') %>
        </div>
    </div>

    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <%- include('partials/logout-modal') %>
    <%- include('partials/scripts') %>

    <script>
        function themThuyenVien() {
            window.location.href = '/crew-add';
        }
        
        function chonTatCa(source) {
            var checkboxes = document.querySelectorAll('.row-checkbox');
            for (var i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = source.checked;
            }
        }
        
        function xoaTatCaThuyenVien() {
            var checkboxes = document.querySelectorAll('.row-checkbox:checked');
            if (checkboxes.length === 0) {
                alert('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt thuy·ªÅn vi√™n ƒë·ªÉ x√≥a');
                return;
            }
            
            if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a c√°c thuy·ªÅn vi√™n ƒë√£ ch·ªçn?')) {
                // X·ª≠ l√Ω x√≥a d·ªØ li·ªáu (s·∫Ω ƒë∆∞·ª£c th√™m sau)
                alert('ƒê√£ x√≥a ' + checkboxes.length + ' thuy·ªÅn vi√™n');
            }
        }

        // Load certificates and initialize filter
        $(document).ready(function() {
            // First add select2 CSS and JS if not already included
            if (!$('link[href*="select2.min.css"]').length) {
                $('head').append('<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />');
            }
            
            // Load Select2 script and initialize after it's loaded
            if (!$('script[src*="select2.min.js"]').length) {
                $.getScript('https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js', function() {
                    initializeCertificateFilter();
                });
            } else {
                initializeCertificateFilter();
            }
        });
        
        function initializeCertificateFilter() {
            console.log("Initializing certificate filter");
            // Load all certificates from API
            $.ajax({
                url: '/api/chung-chi',
                type: 'GET',
                dataType: 'json',
                success: function(certificates) {
                    console.log("Certificates loaded:", certificates);
                    
                    // Populate certificate dropdown
                    var select = $('#certificateFilter');
                    select.empty(); // Clear any existing options
                    
                    certificates.forEach(function(cert) {
                        select.append('<option value="' + cert.id_chungchi + '">' + cert.tenchungchi + '</option>');
                    });
                    
                    // Initialize the multi-select plugin
                    select.select2({
                        placeholder: 'Ch·ªçn c√°c ch·ª©ng ch·ªâ...',
                        width: '100%'
                    });
                    
                    // Add change event for certificate filter AFTER select2 initialization
                    select.on('change', function() {
                        console.log("Certificate selection changed:", $(this).val());
                        filterTableByCertificates();
                    });
                },
                error: function(error) {
                    console.error('Error loading certificates:', error);
                    alert('Kh√¥ng th·ªÉ t·∫£i danh s√°ch ch·ª©ng ch·ªâ: ' + error.statusText);
                }
            });
        }
        
        // Function to filter table by selected certificates
        function filterTableByCertificates() {
            var selectedCertificates = $('#certificateFilter').val();
            console.log("Selected certificates for filtering:", selectedCertificates);
            
            if (!selectedCertificates || selectedCertificates.length === 0) {
                // If no certificates selected, show all rows
                console.log("No certificates selected, showing all rows");
                
                // Remove any existing custom filters first
                if ($.fn.dataTable.ext.search.length > 0) {
                    $.fn.dataTable.ext.search.pop();
                }
                
                $('#dataAllThuyenVienTable').DataTable().draw();
                return;
            }
            
            // Get all crew member ids who have the selected certificates
            $.ajax({
                url: '/api/crew-with-certificates',
                type: 'GET',
                data: { certificates: selectedCertificates.join(',') },
                dataType: 'json',
                success: function(crewIds) {
                    console.log("Received crew IDs with certificates:", crewIds);
                    
                    // Remove any existing custom filters first
                    if ($.fn.dataTable.ext.search.length > 0) {
                        $.fn.dataTable.ext.search.pop();
                    }
                    
                    // Add custom filter for certificate
                    $.fn.dataTable.ext.search.push(
                        function(settings, data, dataIndex) {
                            // Crew ID is in column 1 (index 1)
                            var crewId = parseInt(data[1]);
                            return crewIds.includes(crewId);
                        }
                    );
                    
                    // Apply the filter
                    $('#dataAllThuyenVienTable').DataTable().draw();
                },
                error: function(error) {
                    console.error('Error filtering by certificates:', error);
                    alert('L·ªói khi l·ªçc theo ch·ª©ng ch·ªâ: ' + error.statusText);
                }
            });
        }

        // Prevent DataTables reinitialization
        $(document).ready(function() {
            // Destroy existing DataTable instance if it exists
            if ($.fn.DataTable.isDataTable('#dataAllThuyenVienTable')) {
                $('#dataAllThuyenVienTable').DataTable().destroy();
            }

            // Initialize DataTables with Vietnamese localization
            var table = $('#dataAllThuyenVienTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "dom": 'lrtip', // Hide default search box
                "language": {
                    "search": "T√¨m ki·∫øm:",
                    "lengthMenu": "Hi·ªÉn th·ªã _MENU_ m·ª•c",
                    "info": "Hi·ªÉn th·ªã _START_ ƒë·∫øn _END_ c·ªßa _TOTAL_ m·ª•c",
                    "infoEmpty": "Hi·ªÉn th·ªã 0 ƒë·∫øn 0 c·ªßa 0 m·ª•c",
                    "paginate": {
                        "first": "ƒê·∫ßu",
                        "last": "Cu·ªëi",
                        "next": "Sau",
                        "previous": "Tr∆∞·ªõc"
                    }
                }
            });

            // Custom search functionality
            $('#searchBox').keyup(function() {
                let selectedStatus = $(this).val();
                
                // Remove any existing custom filters first
                $.fn.dataTable.ext.search.pop();
                
                // Only add filter if a status is selected
                if (selectedStatus) {
                    // Custom filtering function for the status column
                    $.fn.dataTable.ext.search.push(
                        function(settings, data, dataIndex) {
                            // Status is in column 5 (index 5)
                            let rowStatus = data[2]; // Extract text from HTML


                            // Check if the row status contains the selected status
                            return rowStatus.includes(selectedStatus);
                        }
                    );
                }
                
                // Apply the filter
                table.draw();
            });
            
            // Status filter functionality
            $('#statusFilter').change(function() {
                let selectedStatus = $(this).val();
                
                // Remove any existing custom filters first
                $.fn.dataTable.ext.search.pop();
                
                // Only add filter if a status is selected
                if (selectedStatus) {
                    // Custom filtering function for the status column
                    $.fn.dataTable.ext.search.push(
                        function(settings, data, dataIndex) {
                            // Status is in column 5 (index 5)
                            let rowStatus = data[5]; // Extract text from HTML


                            // Check if the row status contains the selected status
                            return rowStatus === selectedStatus;
                        }
                    );
                }
                
                // Apply the filter
                table.draw();
            });

            // Set the entries dropdown to control page length
            $('#entries').on('change', function() {
                table.page.len($(this).val()).draw();
            });
        });
    </script>
</body>

</html>